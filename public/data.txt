1. rails g scaffold Product title:string description:text image_url:string price:decimal
2. change in the migration file -> precision: 8, scale: 2
3. rake db:migrate
4. in views/products/form    
		  <%= f.text_area :description, :rows => 6 %>
5. added seed data
6. added depot.css file
7. changed the products/index.html.erb file
8. <%= image_tag(product.image_url, :class => 'list_image') %>
9. <%= truncate(strip_tags(product.description), :length => 80) %>
10. Validations added
11. rails generate controller store index
12. root path has been set to 'store#index'
13. sprintf("$%0,02f", product.price)
14. number_to_currency(product.price)
15.rails g scaffold cart
16. added a private method current_cart in Application Controller to find a cart by id, 	if  not found create one and store the cart id in session.
17.rails g scaffold line_item product_id:integer cart_id:integer
18. rake db:migrate
19. defining associatons: Cart has_many line_items;  LineItem belongs_to product, cart; Product has_many line_items
20. add method add_product in cart.rb, change the line items controller
21. '&times;'.html_safe  ;   &times; is a close(x) symbol
22. rails g migration combine_items_in_cart
23. added little code in the newly created migration file
24. Handling an exception:
	  rescue_from ActiveRecord::RecordNotFound, :with => :record_not_found
	  def record_not_found
	    redirect_to store_path
	  end

25. @cart.total_price
	def total_price 
  		line_items.to_a.sum { |item| item.total_price }
	end
26. 
depot> rails generate scaffold order name:string address:text \ email:string pay_type:string
...
depot> rails generate migration add_order_id_to_line_item \
          order_id:integer
27. rake db:migrate
28.  <div class="field">
    <%= f.label :pay_type %><br>
    <%= f.select :pay_type, Order::PAYMENT_TYPES,
                  :prompt => 'Select a payment method' %>
  </div>
29.     validates :pay_type, :inclusion => PAYMENT_TYPES

